# Generated by Django 5.2 on 2025-04-27 05:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BarterTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_preferences', models.TextField(blank=True, default='')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('flagged', 'Flagged'), ('removed', 'Removed')], default='active', max_length=20)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flag_reason', models.TextField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('link', models.URLField(blank=True, max_length=255, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Pokemon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokeapi_id', models.IntegerField(db_index=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('rarity', models.IntegerField()),
                ('image_url', models.URLField(blank=True, max_length=255, null=True)),
                ('types', models.JSONField(default=list)),
                ('offered_in_trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offered_pokemon', to='api.bartertrade')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pokemon', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MoneyTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_asked', models.IntegerField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('flagged', 'Flagged'), ('removed', 'Removed')], default='active', max_length=20)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flag_reason', models.TextField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pokemon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='money_trade_listing', to='api.pokemon')),
            ],
        ),
        migrations.AddField(
            model_name='bartertrade',
            name='pokemon',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='barter_trade_listing', to='api.pokemon'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField(default=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TradeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flag_reason', models.TextField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL)),
                ('pokemon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.pokemon')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TradeReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('barter_trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='api.bartertrade')),
                ('money_trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='api.moneytrade')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_reports', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TradeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_trades', to=settings.AUTH_USER_MODEL)),
                ('receiver_pokemon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_in_trades', to='api.pokemon')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_trades', to=settings.AUTH_USER_MODEL)),
                ('sender_pokemon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offered_in_trades', to='api.pokemon')),
            ],
        ),
    ]

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SearchImport } from './routes/search'
import { Route as ResetPasswordImport } from './routes/resetPassword'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as UserUsernameImport } from './routes/user.$username'
import { Route as TradeTradeIdImport } from './routes/trade.$tradeId'
import { Route as PokemonPokemonIdImport } from './routes/pokemon.$pokemonId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SearchRoute = SearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/resetPassword',
  path: '/resetPassword',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserUsernameRoute = UserUsernameImport.update({
  id: '/user/$username',
  path: '/user/$username',
  getParentRoute: () => rootRoute,
} as any)

const TradeTradeIdRoute = TradeTradeIdImport.update({
  id: '/trade/$tradeId',
  path: '/trade/$tradeId',
  getParentRoute: () => rootRoute,
} as any)

const PokemonPokemonIdRoute = PokemonPokemonIdImport.update({
  id: '/pokemon/$pokemonId',
  path: '/pokemon/$pokemonId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/resetPassword': {
      id: '/resetPassword'
      path: '/resetPassword'
      fullPath: '/resetPassword'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/pokemon/$pokemonId': {
      id: '/pokemon/$pokemonId'
      path: '/pokemon/$pokemonId'
      fullPath: '/pokemon/$pokemonId'
      preLoaderRoute: typeof PokemonPokemonIdImport
      parentRoute: typeof rootRoute
    }
    '/trade/$tradeId': {
      id: '/trade/$tradeId'
      path: '/trade/$tradeId'
      fullPath: '/trade/$tradeId'
      preLoaderRoute: typeof TradeTradeIdImport
      parentRoute: typeof rootRoute
    }
    '/user/$username': {
      id: '/user/$username'
      path: '/user/$username'
      fullPath: '/user/$username'
      preLoaderRoute: typeof UserUsernameImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/resetPassword': typeof ResetPasswordRoute
  '/search': typeof SearchRoute
  '/signup': typeof SignupRoute
  '/pokemon/$pokemonId': typeof PokemonPokemonIdRoute
  '/trade/$tradeId': typeof TradeTradeIdRoute
  '/user/$username': typeof UserUsernameRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/resetPassword': typeof ResetPasswordRoute
  '/search': typeof SearchRoute
  '/signup': typeof SignupRoute
  '/pokemon/$pokemonId': typeof PokemonPokemonIdRoute
  '/trade/$tradeId': typeof TradeTradeIdRoute
  '/user/$username': typeof UserUsernameRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/resetPassword': typeof ResetPasswordRoute
  '/search': typeof SearchRoute
  '/signup': typeof SignupRoute
  '/pokemon/$pokemonId': typeof PokemonPokemonIdRoute
  '/trade/$tradeId': typeof TradeTradeIdRoute
  '/user/$username': typeof UserUsernameRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/resetPassword'
    | '/search'
    | '/signup'
    | '/pokemon/$pokemonId'
    | '/trade/$tradeId'
    | '/user/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/resetPassword'
    | '/search'
    | '/signup'
    | '/pokemon/$pokemonId'
    | '/trade/$tradeId'
    | '/user/$username'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/resetPassword'
    | '/search'
    | '/signup'
    | '/pokemon/$pokemonId'
    | '/trade/$tradeId'
    | '/user/$username'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SearchRoute: typeof SearchRoute
  SignupRoute: typeof SignupRoute
  PokemonPokemonIdRoute: typeof PokemonPokemonIdRoute
  TradeTradeIdRoute: typeof TradeTradeIdRoute
  UserUsernameRoute: typeof UserUsernameRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SearchRoute: SearchRoute,
  SignupRoute: SignupRoute,
  PokemonPokemonIdRoute: PokemonPokemonIdRoute,
  TradeTradeIdRoute: TradeTradeIdRoute,
  UserUsernameRoute: UserUsernameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/resetPassword",
        "/search",
        "/signup",
        "/pokemon/$pokemonId",
        "/trade/$tradeId",
        "/user/$username"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/resetPassword": {
      "filePath": "resetPassword.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/pokemon/$pokemonId": {
      "filePath": "pokemon.$pokemonId.tsx"
    },
    "/trade/$tradeId": {
      "filePath": "trade.$tradeId.tsx"
    },
    "/user/$username": {
      "filePath": "user.$username.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
